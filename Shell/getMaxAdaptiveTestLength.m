function [maxTestLength,nRandomQuestionsNotInModel] = getMaxAdaptiveTestLength(nKPsForTest,nKPsForCourse,actualMaxTestLengthFull,testType)

if nKPsForCourse > 560
    computedMaxTestLengthFULL=35;
else
    computedMaxTestLengthFULLraw=[4.4,6.4,7.5375,8.6463,9.7348,10.8059,11.8612,12.9017,13.9282,14.9412,15.9414,16.9291,17.9016,18.7649,19.4759,20.035,20.4425,20.769,21.0856,21.3926,21.6903,21.979,22.259,22.5305,22.7938,23.0491,23.2966,23.5367,23.7695,23.9952,24.214,24.4262,24.6319,24.8314,25.0248,25.2124,25.3942,25.5705,25.7414,25.9071,26.0678,26.2235,26.3746,26.521,26.6629,26.8005,26.934,27.0633,27.1888,27.3104,27.4283,27.5426,27.6534,27.7609,27.8651,27.9661,28.0641,28.1591,28.2512,28.3405,28.4271,28.5111,28.5926,28.6716,28.7483,28.8226,28.8947,28.9647,29.0326,29.0984,29.1623,29.2243,29.2844,29.3428,29.3995,29.4545,29.5079,29.5597,29.61,29.6589,29.7064,29.7524,29.7972,29.8407,29.883,29.924,29.9639,30.0027,30.0404,30.0771,30.1128,30.1474,30.1812,30.214,30.2459,30.277,30.3073,30.3368,30.3655,30.3934,30.4207,30.4472,30.4731,30.4983,30.5229,30.5469,30.5703,30.5932,30.6155,30.6373,30.6586,30.6794,30.6997,30.7195,30.739,30.7579,30.7765,30.7947,30.8125,30.83,30.8471,30.8638,30.8802,30.8963,30.9121,30.9276,30.9428,30.9577,30.9724,30.9868,31.001,31.0149,31.0286,31.0421,31.0553,31.0684,31.0812,31.0939,31.1064,31.1187,31.1308,31.1428,31.1546,31.1662,31.1778,31.1891,31.2004,31.2115,31.2224,31.2333,31.244,31.2547,31.2652,31.2756,31.2859,31.2961,31.3062,31.3163,31.3262,31.3361,31.3459,31.3556,31.3652,31.3748,31.3843,31.3937,31.4031,31.4124,31.4217,31.4309,31.44,31.4491,31.4581,31.4671,31.4761,31.485,31.4939,31.5027,31.5115,31.5202,31.5289,31.5376,31.5462,31.5548,31.5634,31.572,31.5805,31.589,31.5974,31.6059,31.6143,31.6227,31.6311,31.6394,31.6478,31.6561,31.6644,31.6726,31.6809,31.6891,31.6974,31.7056,31.7138,31.722,31.7301,31.7383,31.7464,31.7545,31.7627,31.7708,31.7789,31.787,31.795,31.8031,31.8112,31.8192,31.8272,31.8353,31.8433,31.8513,31.8593,31.8673,31.8753,31.8833,31.8913,31.8993,31.9073,31.9152,31.9232,31.9312,31.9391,31.9471,31.955,31.9629,31.9709,31.9788,31.9867,31.9947,32.0026,32.0105,32.0184,32.0263,32.0342,32.0421,32.05,32.0579,32.0658,32.0737,32.0816,32.0895,32.0974,32.1053,32.1132,32.121,32.1289,32.1368,32.1447,32.1525,32.1604,32.1683,32.1761,32.184,32.1919,32.1997,32.2076,32.2154,32.2233,32.2312,32.239,32.2469,32.2547,32.2626,32.2704,32.2783,32.2861,32.294,32.3018,32.3096,32.3175,32.3253,32.3332,32.341,32.3488,32.3567,32.3645,32.3723,32.3802,32.388,32.3958,32.4037,32.4115,32.4193,32.4272,32.435,32.4428,32.4506,32.4585,32.4663,32.4741,32.4819,32.4897,32.4976,32.5054,32.5132,32.521,32.5288,32.5367,32.5445,32.5523,32.5601,32.5679,32.5757,32.5835,32.5914,32.5992,32.607,32.6148,32.6226,32.6304,32.6382,32.646,32.6538,32.6616,32.6694,32.6772,32.685,32.6928,32.7006,32.7085,32.7163,32.7241,32.7319,32.7397,32.7475,32.7553,32.763,32.7708,32.7786,32.7864,32.7942,32.802,32.8098,32.8176,32.8254,32.8332,32.841,32.8488,32.8566,32.8644,32.8722,32.8799,32.8877,32.8955,32.9033,32.9111,32.9189,32.9267,32.9345,32.9422,32.95,32.9578,32.9656,32.9734,32.9812,32.9889,32.9967,33.0045,33.0123,33.0201,33.0279,33.0356,33.0434,33.0512,33.059,33.0667,33.0745,33.0823,33.0901,33.0979,33.1056,33.1134,33.1212,33.129,33.1367,33.1445,33.1523,33.16,33.1678,33.1756,33.1834,33.1911,33.1989,33.2067,33.2144,33.2222,33.23,33.2377,33.2455,33.2533,33.261,33.2688,33.2766,33.2843,33.2921,33.2999,33.3076,33.3154,33.3232,33.3309,33.3387,33.3465,33.3542,33.362,33.3697,33.3775,33.3853,33.393,33.4008,33.4085,33.4163,33.4241,33.4318,33.4396,33.4473,33.4551,33.4628,33.4706,33.4784,33.4861,33.4939,33.5016,33.5094,33.5171,33.5249,33.5326,33.5404,33.5481,33.5559,33.5637,33.5714,33.5792,33.5869,33.5947,33.6024,33.6102,33.6179,33.6257,33.6334,33.6412,33.6489,33.6567,33.6644,33.6722,33.6799,33.6876,33.6954,33.7031,33.7109,33.7186,33.7264,33.7341,33.7419,33.7496,33.7574,33.7651,33.7728,33.7806,33.7883,33.7961,33.8038,33.8116,33.8193,33.827,33.8348,33.8425,33.8503,33.858,33.8657,33.8735,33.8812,33.889,33.8967,33.9044,33.9122,33.9199,33.9277,33.9354,33.9431,33.9509,33.9586,33.9663,33.9741,33.9818,33.9896,33.9973,34.005,34.0128,34.0205,34.0282,34.036,34.0437,34.0514,34.0592,34.0669,34.0746,34.0824,34.0901,34.0978,34.1056,34.1133,34.121,34.1287,34.1365,34.1442,34.1519,34.1597,34.1674,34.1751,34.1829,34.1906,34.1983,34.206,34.2138,34.2215,34.2292,34.237,34.2447,34.2524,34.2601,34.2679,34.2756,34.2833,34.291,34.2988,34.3065,34.3142,34.3219,34.3297,34.3374,34.3451,34.3528,34.3606,34.3683,34.376,34.3837,34.3915,34.3992,34.4069,34.4146,34.4224,34.4301,34.4378,34.4455,34.4532,34.461,34.4687,34.4764,34.4841,34.4918,34.4996];    
    computedMaxTestLengthFULL=round(computedMaxTestLengthFULLraw(nKPsForCourse));
end

scalar=actualMaxTestLengthFull/computedMaxTestLengthFULL;

if nKPsForTest > 560
    maxTestLength=round(scalar*35);
else
    maxTestLength=round(scalar*computedMaxTestLengthFULLraw(nKPsForTest));
end


if testType==1
    %do nothing
elseif testType==2
    maxTestLength=round(0.5*maxTestLength);
end

if maxTestLength > 20
    nRandomQuestionsNotInModel=2;
else
    nRandomQuestionsNotInModel=1;
end

end

